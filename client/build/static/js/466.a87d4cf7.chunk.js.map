{"version":3,"file":"static/js/466.a87d4cf7.chunk.js","mappings":"yMASA,EATkB,SAACA,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAACC,GAAD,OAAWP,EAAOO,Q,kBCyIvC,EAtIoB,YACDC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,yBACC,IAEH,IAEIC,EACFC,EACAC,EAJIC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQC,SAKvDC,GAAcC,EAAAA,EAAAA,UAiChB,OACE,gBAAKC,UAAU,YAAf,UACE,gBAAKA,UAAU,oCAAf,UACE,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,OAAf,UACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,kBAAf,WACE,gBACEC,IAAK,SAACC,GAAD,OAAYJ,EAAcI,GAC/BF,UAAU,kBACVG,IAAKV,EAAW,MAChBW,IAAKX,EAAW,SAChBY,MAAO,CAAEC,SAAU,YAErB,mBACA,iBAAKN,UAAU,MAAf,WACE,iBAAKA,UAAU,YAAf,WACE,gDACA,kBACEO,SAlDC,WACnB,IAAMC,EAAUhB,EAAWiB,MAAM,GACjCC,EAAUF,GAASG,MAAK,SAACC,GACvBd,EAAYK,IAAMS,MAgDFX,IAAK,SAACC,GAAD,OAAYV,EAAaU,GAC9BW,YAAY,aACZb,UAAU,iCACVc,KAAK,aAGT,iBAAKd,UAAU,YAAf,WACE,8CACA,kBAEEe,aAActB,EAAW,MACzBuB,UAAU,EACVH,YAAY,aACZb,UAAU,iCACVc,KAAK,SALAG,KAAKC,WAQd,iBAAKlB,UAAU,YAAf,WACE,0CACA,kBAEEe,aAActB,EAAW,SACzBuB,UAAU,EACVH,YAAY,YACZb,UAAU,iCACVc,KAAK,QALAG,KAAKC,WAQd,iBAAKlB,UAAU,YAAf,WACE,qCACA,kBAEEe,aAActB,EAAW,KACzBQ,IAAK,SAACC,GAAD,OAAYZ,EAAcY,GAC/BW,YAAY,OACZb,UAAU,iCACVc,KAAK,QALAG,KAAKC,WASd,iBAAKlB,UAAU,YAAf,WACE,uCACA,kBAEEe,aAActB,EAAW,MACzBQ,IAAK,SAACC,GAAD,OAAYX,EAAgBW,GACjCW,YAAY,SACZb,UAAU,iCACVc,KAAK,UALAG,KAAKC,WAQd,gBAAKlB,UAAU,YAAf,UACE,mBACEmB,QAjGE,WACpB,GAAIC,EAAAA,EAAAA,QAAuB9B,EAAYO,OACrCwB,EAAAA,EAAAA,aAA0B,yBACrB,GAAKD,EAAAA,EAAAA,SAAwB7B,EAAcM,OAE3C,CACL,IAAMyB,EAAOhC,EAAYO,MACnB0B,EAAQhC,EAAcM,MACtB2B,EAAQ1B,EAAYK,IAE1Bd,EAAAA,EAAAA,qBACEiC,EACAC,EACAC,EACA/B,EAAYgC,OACZd,MAAK,SAAC3B,GACFA,GAEFK,EAAAA,EAAAA,+BAdJgC,EAAAA,EAAAA,aAA0B,0BA8FVrB,UAAU,oDAFZ","sources":["helper/GetBase64.js","components/UserProfile/UserProfile.jsx"],"sourcesContent":["const GetBase64 = (file) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n};\r\n\r\nexport default GetBase64;\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ApiRequest from \"../../APIRequest/ApiRequest\";\r\nimport FormValidation from \"../../helper/FormValidation\";\r\nimport GetBase64 from \"../../helper/GetBase64\";\r\nimport ToastMessage from \"../../helper/ToastMessage\";\r\n\r\nconst UserProfile = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    ApiRequest.ProfileSelectRequest();\r\n  }, []);\r\n\r\n  const userProfile = useSelector((state) => state.profile.value);\r\n\r\n  let userNameRef,\r\n    userMobileRef,\r\n    userImgRef,\r\n    userImgView = useRef();\r\n\r\n  const previewImage = () => {\r\n    const imgFile = userImgRef.files[0];\r\n    GetBase64(imgFile).then((base64Img) => {\r\n      userImgView.src = base64Img;\r\n    });\r\n  };\r\n\r\n  const updateProfile = () => {\r\n    if (FormValidation.isEmpty(userNameRef.value)) {\r\n      ToastMessage.errorMessage(\"Name is Required\");\r\n    } else if (!FormValidation.isMobile(userMobileRef.value)) {\r\n      ToastMessage.errorMessage(\"Invalid Mobile Number\");\r\n    } else {\r\n      const name = userNameRef.value;\r\n      const phone = userMobileRef.value;\r\n      const photo = userImgView.src;\r\n\r\n      ApiRequest.ProfileUpdateRequest(\r\n        name,\r\n        phone,\r\n        photo,\r\n        userProfile.email,\r\n      ).then((result) => {\r\n        if (result) {\r\n          // navigate(\"/profile\");\r\n          ApiRequest.ProfileSelectRequest();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row d-flex justify-content-center\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"container-fluid\">\r\n                <img\r\n                  ref={(input) => (userImgView = input)}\r\n                  className=\"icon-nav-img-lg\"\r\n                  src={userProfile[\"photo\"]}\r\n                  alt={userProfile[\"userName\"]}\r\n                  style={{ maxWidth: \"200px\" }}\r\n                />\r\n                <hr />\r\n                <div className=\"row\">\r\n                  <div className=\"col-4 p-2\">\r\n                    <label>Profile Picture</label>\r\n                    <input\r\n                      onChange={previewImage}\r\n                      ref={(input) => (userImgRef = input)}\r\n                      placeholder=\"User Email\"\r\n                      className=\"form-control animated fadeInUp\"\r\n                      type=\"file\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-4 p-2\">\r\n                    <label>Email Address</label>\r\n                    <input\r\n                      key={Date.now()}\r\n                      defaultValue={userProfile[\"email\"]}\r\n                      readOnly={true}\r\n                      placeholder=\"User Email\"\r\n                      className=\"form-control animated fadeInUp\"\r\n                      type=\"email\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-4 p-2\">\r\n                    <label>User Name</label>\r\n                    <input\r\n                      key={Date.now()}\r\n                      defaultValue={userProfile[\"userName\"]}\r\n                      readOnly={true}\r\n                      placeholder=\"User Name\"\r\n                      className=\"form-control animated fadeInUp\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-4 p-2\">\r\n                    <label>Name</label>\r\n                    <input\r\n                      key={Date.now()}\r\n                      defaultValue={userProfile[\"name\"]}\r\n                      ref={(input) => (userNameRef = input)}\r\n                      placeholder=\"Name\"\r\n                      className=\"form-control animated fadeInUp\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"col-4 p-2\">\r\n                    <label>Mobile</label>\r\n                    <input\r\n                      key={Date.now()}\r\n                      defaultValue={userProfile[\"phone\"]}\r\n                      ref={(input) => (userMobileRef = input)}\r\n                      placeholder=\"Mobile\"\r\n                      className=\"form-control animated fadeInUp\"\r\n                      type=\"number\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-4 p-2\">\r\n                    <button\r\n                      onClick={updateProfile}\r\n                      className=\"btn w-100 float-end btn-primary animated fadeInUp\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"names":["file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","useNavigate","useEffect","ApiRequest","userNameRef","userMobileRef","userImgRef","userProfile","useSelector","state","profile","value","userImgView","useRef","className","ref","input","src","alt","style","maxWidth","onChange","imgFile","files","GetBase64","then","base64Img","placeholder","type","defaultValue","readOnly","Date","now","onClick","FormValidation","ToastMessage","name","phone","photo","email"],"sourceRoot":""}