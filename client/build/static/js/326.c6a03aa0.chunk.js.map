{"version":3,"file":"static/js/326.c6a03aa0.chunk.js","mappings":"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","sources":["APIRequest/ApiRequest.js","components/Dashboard/Dashboard.jsx","helper/ToastMessage.js"],"sourcesContent":["//external lib import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { setDashboardSummary } from \"../redux/features/dashboardSlice\";\r\nimport { removeLoading, setLoading } from \"../redux/features/loaderSlice\";\r\nimport {\r\n  setAllTask,\r\n  setCancledTask,\r\n  setNewTask,\r\n  setPendingTask,\r\n  setComplateTask,\r\n} from \"../redux/features/taskSlice\";\r\n\r\nimport store from \"../redux/store/store\";\r\n\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.common[\"Authorization\"] =\r\n  \"Bearer \" + SessionHelper.getToken();\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nclass ApiRequest {\r\n  static RegistrationUserRequest({ name, userName, email, phone, password }) {\r\n    return axios\r\n      .post(\"/user/registrationUser\", {\r\n        name,\r\n        userName,\r\n        email,\r\n        phone,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          return true;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 409) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static LoginUserRequest({ email, phone, password }) {\r\n    store.dispatch(setLoading());\r\n    return axios\r\n      .post(\"/user/loginUser\", {\r\n        email,\r\n        phone,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 200) {\r\n          SessionHelper.setToken(response.data.accessToken);\r\n          SessionHelper.setUserDetails(response.data.user);\r\n          return true;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 404) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        } else if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static CreateNewTaskRequest(title, body) {\r\n    store.dispatch(setLoading());\r\n    return axios\r\n      .post(\"/task/createTask\", {\r\n        title,\r\n        body,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 201) {\r\n          return true;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static SetAllTaskRequest() {\r\n    store.dispatch(setLoading());\r\n    axios\r\n      .get(\"/task/selectTask\")\r\n      .then((response) => {\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 200) {\r\n          store.dispatch(setAllTask(response.data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static SetTaskStatusRequest(status) {\r\n    store.dispatch(setLoading());\r\n    return axios\r\n      .get(\"/task/selectTaskByStatus/\" + status)\r\n      .then((response) => {\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 200) {\r\n          if (status === \"new\") {\r\n            store.dispatch(setNewTask(response.data));\r\n          } else if (status === \"pending\") {\r\n            store.dispatch(setPendingTask(response.data));\r\n          } else if (status === \"canceled\") {\r\n            store.dispatch(setCancledTask(response.data));\r\n          } else if (status === \"complate\") {\r\n            store.dispatch(setComplateTask(response.data));\r\n          } else {\r\n            ToastMessage.errorMessage(\"Please Provite Task Status\");\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static SetDashboardSummaryRequest() {\r\n    store.dispatch(setLoading());\r\n    axios\r\n      .get(\"/task/dashboardSummary\")\r\n      .then((response) => {\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 200) {\r\n          store.dispatch(setDashboardSummary(response.data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport default ApiRequest;\r\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ApiRequest from \"../../APIRequest/ApiRequest\";\r\n\r\nconst Dashboard = () => {\r\n  const dashBoardSummary = useSelector(\r\n    (state) => state.dashboard.dashboardSummaryList,\r\n  );\r\n\r\n  useEffect(() => {\r\n    ApiRequest.SetDashboardSummaryRequest();\r\n  }, []);\r\n\r\n  if (dashBoardSummary.length > 0) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {dashBoardSummary &&\r\n            dashBoardSummary.map((item) => (\r\n              <div\r\n                className=\"col-12 col-lg-3 col-sm-6 col-md-3  p-2\"\r\n                key={item._id}\r\n              >\r\n                <div className=\"card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"animated fadeInUp\">Total {item._id}</h5>\r\n                    <h6 className=\"text-secondary animated fadeInUp\">\r\n                      {item.count}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {[\"new\", \"canceled\", \"pending\", \"complate\"].map((item, index) => (\r\n            <div className=\"col-12 col-lg-3 col-sm-6 col-md-3  p-2\" key={index}>\r\n              <div className=\"card h-100\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"animated fadeInUp\">Total {item}</h5>\r\n                  <h6 className=\"text-secondary animated fadeInUp\">0</h6>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["axios","SessionHelper","ApiRequest","name","userName","email","phone","password","then","response","status","catch","err","ToastMessage","data","message","window","location","href","store","setLoading","removeLoading","accessToken","user","title","body","console","log","setAllTask","setNewTask","setPendingTask","setCancledTask","setComplateTask","setDashboardSummary","dashBoardSummary","useSelector","state","dashboard","dashboardSummaryList","useEffect","length","className","map","item","_id","count","index","msg","cogoToast","position"],"sourceRoot":""}