{"version":3,"file":"static/js/877.6e612a36.chunk.js","mappings":"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","sources":["APIRequest/ApiRequest.js","components/RegistrationUser/RegistrationUser.jsx","helper/FormValidation.js","helper/ToastMessage.js"],"sourcesContent":["//external lib import\r\nimport axios from \"axios\";\r\nimport SessionHelper from \"../helper/SessionHelper\";\r\nimport ToastMessage from \"../helper/ToastMessage\";\r\nimport { setDashboardSummary } from \"../redux/features/dashboardSlice\";\r\nimport { removeLoading, setLoading } from \"../redux/features/loaderSlice\";\r\nimport {\r\n  setAllTask,\r\n  setCancledTask,\r\n  setNewTask,\r\n  setPendingTask,\r\n  setComplateTask,\r\n} from \"../redux/features/taskSlice\";\r\n\r\nimport store from \"../redux/store/store\";\r\n\r\naxios.defaults.baseURL = \"/api/v1\";\r\naxios.defaults.headers.common[\"Authorization\"] =\r\n  \"Bearer \" + SessionHelper.getToken();\r\n\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded\";\r\n\r\nclass ApiRequest {\r\n  static RegistrationUserRequest({ name, userName, email, phone, password }) {\r\n    return axios\r\n      .post(\"/user/registrationUser\", {\r\n        name,\r\n        userName,\r\n        email,\r\n        phone,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        if (response.status === 201) {\r\n          return true;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 409) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static LoginUserRequest({ email, phone, password }) {\r\n    store.dispatch(setLoading());\r\n    return axios\r\n      .post(\"/user/loginUser\", {\r\n        email,\r\n        phone,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 200) {\r\n          SessionHelper.setToken(response.data.accessToken);\r\n          SessionHelper.setUserDetails(response.data.user);\r\n          return true;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 404) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        } else if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static CreateNewTaskRequest(title, body) {\r\n    store.dispatch(setLoading());\r\n    return axios\r\n      .post(\"/task/createTask\", {\r\n        title,\r\n        body,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 201) {\r\n          return true;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static SetAllTaskRequest() {\r\n    store.dispatch(setLoading());\r\n    axios\r\n      .get(\"/task/selectTask\")\r\n      .then((response) => {\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 200) {\r\n          store.dispatch(setAllTask(response.data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static SetTaskStatusRequest(status) {\r\n    store.dispatch(setLoading());\r\n    return axios\r\n      .get(\"/task/selectTaskByStatus/\" + status)\r\n      .then((response) => {\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 200) {\r\n          if (status === \"new\") {\r\n            store.dispatch(setNewTask(response.data));\r\n          } else if (status === \"pending\") {\r\n            store.dispatch(setPendingTask(response.data));\r\n          } else if (status === \"canceled\") {\r\n            store.dispatch(setCancledTask(response.data));\r\n          } else if (status === \"complate\") {\r\n            store.dispatch(setComplateTask(response.data));\r\n          } else {\r\n            ToastMessage.errorMessage(\"Please Provite Task Status\");\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n  static SetDashboardSummaryRequest() {\r\n    store.dispatch(setLoading());\r\n    axios\r\n      .get(\"/task/dashboardSummary\")\r\n      .then((response) => {\r\n        store.dispatch(removeLoading());\r\n        if (response.status === 200) {\r\n          store.dispatch(setDashboardSummary(response.data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        store.dispatch(removeLoading());\r\n        if (err.response.status === 401) {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          SessionHelper.removeToken(\"accessToken\");\r\n          SessionHelper.removeToken(\"user\");\r\n          window.location.href = \"/login\";\r\n          return false;\r\n        } else {\r\n          ToastMessage.errorMessage(err.response.data.message);\r\n          return false;\r\n        }\r\n      });\r\n  }\r\n}\r\n\r\nexport default ApiRequest;\r\n","import React, { useRef } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ApiRequest from \"../../APIRequest/ApiRequest\";\r\nimport FormValidation from \"../../helper/FormValidation\";\r\nimport ToastMessage from \"../../helper/ToastMessage\";\r\n\r\nconst RegistrationUser = () => {\r\n  const navigator = useNavigate();\r\n\r\n  let emailRef,\r\n    userNameRef,\r\n    nameRef,\r\n    phoneRef,\r\n    passwordRef = useRef();\r\n\r\n  const onRegistration = (e) => {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      email: emailRef.value,\r\n      userName: userNameRef.value,\r\n      name: nameRef.value,\r\n      phone: phoneRef.value,\r\n      password: passwordRef.value,\r\n    };\r\n\r\n    if (!FormValidation.isEmail(newUser.email)) {\r\n      ToastMessage.errorMessage(\"Invalid Email Address\");\r\n    } else if (FormValidation.isEmpty(newUser.userName)) {\r\n      ToastMessage.errorMessage(\"Username is Required\");\r\n    } else if (FormValidation.isEmpty(newUser.name)) {\r\n      ToastMessage.errorMessage(\"Name is Required\");\r\n    } else if (!FormValidation.isMobile(newUser.phone)) {\r\n      ToastMessage.errorMessage(\"Invalid Phone Number\");\r\n    } else if (FormValidation.isEmpty(newUser.password)) {\r\n      ToastMessage.errorMessage(\"Password is Required\");\r\n    } else {\r\n      ApiRequest.RegistrationUserRequest(newUser).then((result) => {\r\n        if (result) {\r\n          ToastMessage.successMessage(\"User Registration Successful\");\r\n          navigator(\"/login\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row  justify-content-center\">\r\n        <div\r\n          className=\"col-md-7 col-lg-6 center-screen\"\r\n          style={{ marginTop: \"100px\" }}\r\n        >\r\n          <div className=\"card animated fadeIn w-100 p-3\">\r\n            <div className=\"card-body\">\r\n              <h5>Sign Up</h5>\r\n              <br />\r\n              <form onSubmit={onRegistration}>\r\n                <input\r\n                  ref={(input) => (emailRef = input)}\r\n                  placeholder=\"User Email\"\r\n                  className=\"form-control animated fadeInUp\"\r\n                  type=\"email\"\r\n                />\r\n                <br />\r\n                <input\r\n                  ref={(input) => (userNameRef = input)}\r\n                  placeholder=\"User Name\"\r\n                  className=\"form-control animated fadeInUp\"\r\n                  type=\"text\"\r\n                />\r\n                <br />\r\n                <input\r\n                  ref={(input) => (nameRef = input)}\r\n                  placeholder=\"Name\"\r\n                  className=\"form-control animated fadeInUp\"\r\n                  type=\"text\"\r\n                />\r\n                <br />\r\n                <input\r\n                  ref={(input) => (phoneRef = input)}\r\n                  placeholder=\"Mobile\"\r\n                  className=\"form-control animated fadeInUp\"\r\n                  type=\"number\"\r\n                />\r\n                <br />\r\n                <input\r\n                  ref={(input) => (passwordRef = input)}\r\n                  placeholder=\"User Password\"\r\n                  className=\"form-control animated fadeInUp\"\r\n                  type=\"password\"\r\n                />\r\n                <br />\r\n                <button className=\"btn w-100 float-end btn-primary animated fadeInUp\">\r\n                  Next\r\n                </button>\r\n              </form>\r\n              <div className=\"text-center w-100\">\r\n                <Link className=\"text-center\" to=\"/login\">\r\n                  Sign In\r\n                </Link>\r\n                <br />\r\n                <Link className=\"text-center\" to=\"/forgetpass\">\r\n                  Forget Password\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationUser;\r\n","class FormValidation {\r\n  static isEmpty(value) {\r\n    return value.length <= 0;\r\n  }\r\n  static isEmail(value) {\r\n    let regexEmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n    return regexEmail.test(value);\r\n  }\r\n  static isMobile(value) {\r\n    let regexMobile = /(^(\\+88|0088|88)?(01){1}[3456789]{1}(\\d){8})$/;\r\n    return regexMobile.test(value);\r\n  }\r\n}\r\n\r\nexport default FormValidation;\r\n","//external import\r\nimport cogoToast from \"cogo-toast\";\r\n\r\nclass ToastMessage {\r\n  static successMessage(msg) {\r\n    return cogoToast.success(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n  static errorMessage(msg) {\r\n    return cogoToast.error(msg, {\r\n      position: \"bottom-center\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default ToastMessage;\r\n"],"names":["axios","SessionHelper","ApiRequest","name","userName","email","phone","password","then","response","status","catch","err","ToastMessage","data","message","window","location","href","store","setLoading","removeLoading","accessToken","user","title","body","console","log","setAllTask","setNewTask","setPendingTask","setCancledTask","setComplateTask","setDashboardSummary","emailRef","userNameRef","nameRef","phoneRef","navigator","useNavigate","passwordRef","useRef","className","style","marginTop","onSubmit","e","preventDefault","newUser","value","FormValidation","result","ref","input","placeholder","type","to","length","test","msg","cogoToast","position"],"sourceRoot":""}